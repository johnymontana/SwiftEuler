// Project Euler - Problem 2
//
// Even Fibonacci numbers
// https://projecteuler.net/problem=2
//
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


var fibSeq = [Int]()

fibSeq.append(1)
fibSeq.append(2)

func calcNextFib(seq: [Int]) -> Int {
    return seq[seq.count-1] + seq[seq.count-2]
}

while true {
    let nextFib: Int = calcNextFib(fibSeq)
    if nextFib > 4000000 {
        break
    }
    
    fibSeq.append(nextFib)
}

fibSeq = fibSeq.filter({$0 % 2 == 0})

let seqSum: Int = fibSeq.reduce(0){
    return $0 + $1
}

seqSum
